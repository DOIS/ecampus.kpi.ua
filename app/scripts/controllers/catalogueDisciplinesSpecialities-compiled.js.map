{"version":3,"sources":["catalogueDisciplinesSpecialities.es6"],"names":["angular","module","controller","CatalogueDisciplinesCpesialitiesCtrl","$inject","$scope","api","sharedFiltersData","permission","loadSpecialities","loadSubdivisionsAccordingToPermission","reloadDisciplines","loadDisciplines","filterSubdivision","filterAllSubdivision","disciplines","ifWantToAddRowData","hideTable","lastEdit","id","name","sharedData","getAllFiltersShared","filterSpecialization","errorLabelText","errorLabelTextModal","toggleClass","el","className","classList","toggle","classes","split","existingIndex","indexOf","splice","push","join","createIconElement","icon","document","createElement","setAttribute","changeButtonText","button","show","hide","filterIcon","innerText","appendChild","toggleSidebar","toggleButton","getElementById","npContent","e","preventDefault","addEventListener","$","ready","allSubdivisions","typeId","filter","element","type","loadFaculties","url","method","execute","then","response","fullSubdivisionResponse","subdivisions","sort","sortNames","selected","loadFilterAdd","catch","errorSubdivisions","errorHandler","a","b","name1","name2","localeCompare","SUBSYSTEM_ID","KPI_ID","subsystemUrl","kpiUrl","profTrainsUrl","queriesArray","apiExecuteGet","bind","Promise","all","map","subsystemCathedras","kpiCathedras","profTrains","rest","allPermissions","concat","availableCathedrasId","cathedra","availableProfTrains","profTrain","subdivision","specialtyCode","allSpecialities","specialities","uniqueSpecialities","speciality","nameToDisplay","okr","errorSpecialities","filterSpecialities","subdivisionId","actuality","arr","result","nextInput","i","length","str","j","undefined","specialitiesWithOkr","filterOkr","specialityId","idSpec","idSubdiv","idSpeciality","errorDisciplines","refreshDisc","allDisciplines","discipline","allComponents","component","errorForSelect","addDisc","subdivId","specializationId","ProfTrainTotalId","ProfTrainTotalSubdivisionId","DcSpecializationId","insertedDisc","Component","Discipline8","Shifr","outCredit","Description","unshift","saveDisc","editableObj","objDisc","rtDisciplineId","profTrainTotal","discipline8","shifr","OutCredit","Actuality","description","sendDisc","DisciplineModel","removeDisc","currentRowDisc","confirm","cancelDisc","shift","checkDiscForm","data","showStatus","value","DisciplineNewModel","Name","NameShort","Abbreviation","UserAccount","DcOKRId","DcSubdivisionWhoId","getFilterDisciplines","search","discList","slice","l","newDiscipline","errorFilterDisciplines","toLowerCase","saveDisciplineModal","errorNameModal","errorSubdivModal","getCurrentData","currentData","addDescription","profTrainTotalId","profTrainTotalSubdivisionId","dcSpecializationId","Competence","competence","Knowledge","knowledge","Skill","skill","filterSubdivisionSelect","loadAllSubdivisions","allSubdiv"],"mappings":"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","file":"catalogueDisciplinesSpecialities-compiled.js","sourcesContent":["(function () {\n  'use strict';\n\n  /**\n   * @ngdoc function\n   * @name ecampusApp.controller:CatalogueDisciplinesCpesialitiesCtrl\n   * @description\n   * # CatalogueDisciplinesCpesialitiesCtrl\n   * Controller of the ecampusApp\n   */\n  angular\n    .module('ecampusApp')\n    .controller('CatalogueDisciplinesCpesialitiesCtrl', CatalogueDisciplinesCpesialitiesCtrl);\n\n  CatalogueDisciplinesCpesialitiesCtrl.$inject = ['$scope', 'api', 'sharedFiltersData', 'permission'];\n\n  function CatalogueDisciplinesCpesialitiesCtrl($scope, api, sharedFiltersData, permission) {\n    $scope.loadSpecialities = loadSpecialities;\n    $scope.loadSubdivisionsAccordingToPermission = loadSubdivisionsAccordingToPermission;\n    $scope.reloadDisciplines = loadDisciplines;\n    $scope.filterSubdivision = filterAllSubdivision;\n    // $scope.loadOkr = loadOkr;\n    $scope.disciplines = [];\n    var ifWantToAddRowData = false;\n    $scope.hideTable = false;\n    $scope.lastEdit = { id: '', name: '' };\n    loadSubdivisionsAccordingToPermission();\n\n    var sharedData = sharedFiltersData.getAllFiltersShared();\n\n\n    $scope.filterSpecialization = true;\n    $scope.errorLabelText = '';\n    $scope.errorLabelTextModal = '';\n\n    function toggleClass(el, className) {\n      if (el.classList) {\n        el.classList.toggle(className);\n      } else {\n        var classes = el.className.split(' ');\n        var existingIndex = classes.indexOf(className);\n\n        if (existingIndex >= 0)\n          classes.splice(existingIndex, 1);\n        else\n          classes.push(className);\n\n        el.className = classes.join(' ');\n      }\n    }\n\n    function createIconElement() {\n      var icon = document.createElement('span');\n\n      icon.className = 'glyphicon glyphicon-filter';\n      icon.setAttribute('aria-hidden', 'true');\n      return icon;\n    }\n\n    function changeButtonText(button) {\n      var show = 'Показати фільтри';\n      var hide = 'Сховати фільтри';\n      var filterIcon = createIconElement();\n\n      button.innerText = button.innerText === hide ? show : hide;\n      button.appendChild(filterIcon);\n    }\n\n    function toggleSidebar() {\n      var toggleButton = document.getElementById('filter-toggle');\n      var npContent = document.getElementById('np-content');\n\n      function toggle(e) {\n        e.preventDefault();\n        toggleClass(npContent, 'col-md-7');\n        changeButtonText(toggleButton);\n      }\n\n      toggleButton.addEventListener('click', toggle);\n    }\n\n    //any other solution (exept the one below) leads to work only after page reload in Chrome\n    $(document).ready(toggleSidebar);\n\n    function filterAllSubdivision(allSubdivisions) {\n      // typeId value for faculty subdivisions\n      var typeId = 30;\n\n      return allSubdivisions.filter(function (element) {\n        return (\n          element.type.id === typeId\n        );\n      });\n    }\n\n    function loadFaculties() {\n      var url = 'Subdivision/subsytem/1/cathedras';\n      var method = 'GET';\n      api.execute(method, url)\n        .then(function (response) {\n          $scope.fullSubdivisionResponse = response;\n          $scope.subdivisions = filterAllSubdivision(response).sort(sortNames);\n          $scope.subdivisions.selected = $scope.subdivisions[9];\n          $scope.reloadDisciplines('not set', $scope.subdivisions.selected.id);\n          loadFilterAdd();\n          $scope.loadSpecialities($scope.subdivisions.selected.id);\n        })\n        .catch(function (response) {\n          $scope.errorSubdivisions = api.errorHandler(response);\n        })\n    }\n\n    function sortNames(a, b) {\n      var name1 = a.name;\n      var name2 = b.name;\n\n      return name1.localeCompare(name2);\n    }\n\n    function loadSubdivisionsAccordingToPermission() {\n      const SUBSYSTEM_ID = 26;\n      const KPI_ID = 1;\n      // loadFaculties();\n\n\n      const subsystemUrl = 'Subdivision/subsytem/' + SUBSYSTEM_ID + '/cathedras';\n      const kpiUrl = 'Subdivision/subsytem/' + KPI_ID + '/cathedras';\n      const profTrainsUrl = 'StudyOrganization/ProfTrains/';\n      const queriesArray = [subsystemUrl, kpiUrl, profTrainsUrl];\n      const method = 'GET';\n      const apiExecuteGet = api.execute.bind(api, method);\n      Promise.all(\n        queriesArray.map(apiExecuteGet)\n      ).then(function ([subsystemCathedras, kpiCathedras, profTrains, ...rest]) {\n\n          const allPermissions = subsystemCathedras.concat(kpiCathedras);\n\n          const availableCathedrasId = allPermissions.map(cathedra => cathedra.id);\n\n          const availableProfTrains = profTrains\n            .filter(profTrain => availableCathedrasId.indexOf(profTrain.subdivision.id) !== -1)\n            .filter(profTrain => profTrain.specialtyCode.indexOf('.') !== -1);\n\n          $scope.allSpecialities = availableProfTrains;\n\n          $scope.specialities = uniqueSpecialities(availableProfTrains)\n            .sort(sortNames)\n            .map(speciality => ({\n                ...speciality,\n                nameToDisplay: `${speciality.okr.name} - ${speciality.specialtyCode} ${speciality.name}`\n            }));\n\n          $scope.errorSpecialities = '';\n        })\n        .catch(function (response) {\n          $scope.errorSpecialities = api.errorHandler(response);\n        });\n\n        loadFilterAdd();\n      // .then(function (response) {\n      // var permissionSubdivisions;\n      // permissionSubdivisions = permission.getSubsystemPermission(3); //temp\n      // //permissionSubdivisions = permission.getSubsystemPermission(26);\n      // if (permissionSubdivisions) {\n      //   console.log('ok, it has permission, some subdivisions...');\n      //   $scope.subdivisions = permissionSubdivisions.subdivisions;\n      //   $scope.subdivisions.selected = permissionSubdivisions.subdivisions[0];\n      //   $scope.reloadDisciplines('not set', $scope.subdivisions.selected.id);\n      //   $scope.loadSpecialities($scope.subdivisions.selected.id);\n      // } else {\n      //   console.log('no, there is no permission, load all subdivisions');\n      // loadFaculties();\n      // }\n    }\n\n    function filterSpecialities(allSpecialities, subdivisionId) {\n      var actuality = true;\n\n      return allSpecialities.filter(function (element) {\n        return (\n          element.subdivision.id === subdivisionId\n        );\n      });\n    }\n\n    function uniqueSpecialities(arr) {\n      var result = [];\n\n      nextInput:\n      for (var i = 0; i < arr.length; i++) {\n        var str = arr[i];\n        for (var j = 0; j < result.length; j++) {\n          if (\n            (result[j].id === str.id)\n          ) {\n            continue nextInput;\n          }\n        }\n\n        result.push(str);\n      }\n      return result;\n    }\n\n    function loadSpecialities(subdivisionId) {\n      var url;\n      if (subdivisionId != undefined) {\n        url = ('StudyOrganization/ProfTrains/');\n      } else { return; }\n      api.execute('GET', url)\n        .then(function (response) {\n          // const response = JSON.parse(responseString);\n          // var specialitiesWithOkr = filterSpecialities(response, subdivisionId).filter(specialities => specialities.spezializationId === null);\n          var specialitiesWithOkr = response; //.filter(specialities => specialities.spezializationId === null);\n          $scope.allSpecialities = specialitiesWithOkr;\n          $scope.specialities =\n            uniqueSpecialities(specialitiesWithOkr)\n              .sort(sortNames)\n              .map(speciality => ({\n                ...speciality,\n                nameToDisplay: `${speciality.okr.name} - ${speciality.specialtyCode} ${speciality.name}`\n              }))\n          $scope.errorSpecialities = '';\n        })\n        .catch(function (response) {\n          $scope.errorSpecialities = api.errorHandler(response);\n        });\n    };\n\n    function filterOkr(allSpecialities, specialityId) {\n      return allSpecialities.filter(function (element) {\n        return (\n          element.id === specialityId\n        );\n      });\n    }\n\n    function loadDisciplines(idSpec, idSubdiv, idSpeciality) {\n      var url = '';\n\n      if ((idSubdiv !== 'not set') && (idSubdiv !== undefined)) {\n        url = ('StudyOrganization/Discipline/rtProfTrainTotalSubdiv/' + idSubdiv);\n        $scope.lastEdit.name = 'subdivision';\n        $scope.lastEdit.id = idSubdiv;\n      } else {\n        if ((idSpeciality !== 'not set') && (idSpeciality !== undefined)) {\n          url = ('StudyOrganization/Discipline/rtProfTrainTotal/' + idSpeciality);\n          $scope.lastEdit.name = 'speciality';\n          $scope.lastEdit.id = idSpeciality;\n        } else {\n          return;\n        }\n      }\n\n      api.execute('GET', url)\n        .then(function (response) {\n          $scope.disciplines = response;\n          if (!response || response === '' || response.length === 0) {\n            $scope.errorLabelText = 'На жаль, дані відсутні';\n          } else {\n            $scope.errorLabelText = '';\n          }\n        })\n        .catch(function (response) {\n          $scope.errorDisciplines = api.errorHandler(response);\n        });\n    };\n\n    $scope.refreshDisc = loadFilterAdd;\n\n    function loadFilterAdd() {\n      var url = ('StudyOrganization/Discipline/Filters/');\n      // var url = ('SelectiveDiscipline/BlocksDispline/');\n\n      api.execute('GET', url)\n        .then(function (response) {\n          $scope.allDisciplines = response.discipline;\n          $scope.allComponents = response.component;\n          // $scope.allDisciplines = response.reduce((acc, result) => acc.concat({ id: disciplineBlockId, name: blockName }), []);\n          // $scope.allComponents = response.reduce((acc, result) => acc.concat({ id: disciplineBlockId, name: blockName }), []);\n          // .discipline.sort(sortNames) || [\n          //   {\n          //     name: 'allDisciplines 1',\n          //     id: 1,\n          //   },{\n          //     name: 'allDisciplines 2',\n          //     id: 2,\n          //   }\n          // ];\n          // $scope.allComponents = response.component.sort(sortNames) || [\n          //   {\n          //     name: 'allComponents 1',\n          //     id: 1,\n          //   }, {\n          //     name: 'allComponents 2',\n          //     id: 2,\n          //   }\n          // ];\n          $scope.errorForSelect = '';\n        })\n        .catch(function (response) {\n          $scope.errorForSelect = api.errorHandler(response);\n        });\n    }\n\n    $scope.addDisc = function (subdivId, specialityId, specializationId) {\n      if (!ifWantToAddRowData) {\n        var ProfTrainTotalId = '';\n        var ProfTrainTotalSubdivisionId = '';\n        var DcSpecializationId = '';\n\n        if (specializationId) {\n          DcSpecializationId = specializationId;\n        } else {\n          if (specialityId) {\n            ProfTrainTotalId = specialityId;\n          } else {\n            if (subdivId) {\n              ProfTrainTotalSubdivisionId = subdivId;\n            }\n          }\n        }\n\n        $scope.insertedDisc = {\n          ProfTrainTotalId: ProfTrainTotalId,\n          ProfTrainTotalSubdivisionId: ProfTrainTotalSubdivisionId,\n          Component: {\n            id: ''\n          },\n          Discipline8: {\n            id: ''\n          },\n          Shifr: '',\n          outCredit: '',\n          Description: '',\n          DcSpecializationId: DcSpecializationId\n        };\n\n        $scope.disciplines.unshift($scope.insertedDisc);\n        ifWantToAddRowData = true;\n      }\n    };\n\n    $scope.saveDisc = function (editableObj, objDisc) {\n      var method = '';\n      var url = 'StudyOrganization/Discipline';\n\n      if (objDisc.Shifr !== '') {\n        method = 'PUT';\n        url += `/${objDisc.rtDisciplineId}`;\n      } else {\n        method = 'POST';\n      }\n\n      var ProfTrainTotalId = '';\n      var ProfTrainTotalSubdivisionId = '';\n      var DcSpecializationId = '';\n\n      if ($scope.specialities) {\n        if ($scope.specialities.selected) {\n          ProfTrainTotalId = $scope.specialities.selected.profTrainTotal.id;\n        }\n      } else {\n        if ($scope.subdivisions.selected) {\n          ProfTrainTotalSubdivisionId = $scope.specialities.selected.profTrainTotal.subdivisionId;\n          // ProfTrainTotalSubdivisionId = $scope.subdivisions.selected.id;\n        }\n      }\n\n      var Component = {};\n\n      if (editableObj['objDisc.component']) {\n        Component.id = editableObj['objDisc.component'].id;\n      } else {\n        Component.id = objDisc.component.id;\n      }\n      var Discipline8 = {};\n\n      if (editableObj['objDisc.discipline8']) {\n        Discipline8.id = editableObj['objDisc.discipline8'].id;\n      } else {\n        Discipline8.id = objDisc.discipline8.id;\n      }\n\n      var Shifr;\n      if (editableObj.shifr) {\n        Shifr = editableObj.shifr;\n      } else {\n        Shifr = objDisc.Shifr;\n      }\n\n      var OutCredit;\n      OutCredit = !editableObj.outCredit;\n\n      var Actuality;\n      Actuality = !editableObj.actuality;\n\n      var Description = editableObj.description || objDisc.description;\n\n      var sendDisc = new DisciplineModel(\n        ProfTrainTotalId, ProfTrainTotalSubdivisionId, DcSpecializationId,\n        Component, Discipline8, Shifr, OutCredit, Description,\n        Actuality\n      );\n\n      api.execute(method, url, sendDisc)\n        .then(function (response) {\n          switch ($scope.lastEdit.name) {\n            case 'subdivision':\n              $scope.reloadDisciplines('not set', $scope.lastEdit.id, 'not set');\n              break;\n            case 'speciality':\n              $scope.reloadDisciplines('not set', 'not set', $scope.lastEdit.id);\n              break;\n            case 'specialization':\n              $scope.reloadDisciplines($scope.lastEdit.id, 'not set', 'not set');\n              break;\n            default:\n\n          }\n          $scope.errorLabelText = 'Дані було успішно збережено';\n          ifWantToAddRowData = false;\n        }, function (response) {\n          $scope.errorLabelText = api.errorHandler(response);\n        });\n    }\n\n    $scope.removeDisc = function (currentRowDisc) {\n      if (\n        confirm('Ви впеврені що хочете видалити поточну дисципліну?')\n      ) {\n        var url = (\n          'StudyOrganization/Discipline/' +\n          currentRowDisc.rtDisciplineId\n        );\n\n        var method = 'DELETE';\n\n        api.execute(method, url)\n          .then(function (response) {\n            switch ($scope.lastEdit.name) {\n              case 'subdivision':\n                $scope.reloadDisciplines('not set', $scope.lastEdit.id, 'not set');\n                break;\n              case 'speciality':\n                $scope.reloadDisciplines('not set', 'not set', $scope.lastEdit.id);\n                break;\n              case 'specialization':\n                $scope.reloadDisciplines($scope.lastEdit.id, 'not set', 'not set');\n                break;\n              default:\n\n            }\n            $scope.errorLabelText = 'Видалення дисципліни пройшло успішно';\n          }, function (response) {\n            $scope.errorLabelText = api.errorHandler(response);\n          });\n      }\n    };\n\n    $scope.cancelDisc = function (objDisc) {\n      if (!objDisc.name) {\n        $scope.disciplines.shift(objDisc);\n      }\n    };\n\n    $scope.checkDiscForm = function (data) {\n      if (data === null || data === '' || data === undefined) {\n        return 'Заповніть це поле!';\n      }\n    };\n\n    $scope.showStatus = showStatus;\n\n    function showStatus(value) {\n      return value === true ? 'Так' : 'Ні';\n    }\n\n    function DisciplineModel(\n      ProfTrainTotalId,\n      ProfTrainTotalSubdivisionId,\n      DcSpecializationId,\n      Component,\n      Discipline8,\n      Shifr,\n      OutCredit,\n      Description,\n      Actuality\n    ) {\n      this.ProfTrainTotalId = ProfTrainTotalId;\n      this.ProfTrainTotalSubdivisionId = ProfTrainTotalSubdivisionId;\n      this.DcSpecializationId = DcSpecializationId;\n      this.Component = Component;\n      this.Discipline8 = Discipline8;\n      this.Shifr = Shifr;\n      this.OutCredit = OutCredit;\n      this.Description = Description;\n      this.Actuality = Actuality;\n    };\n\n    function DisciplineNewModel(\n      Name,\n      NameShort,\n      Abbreviation,\n      UserAccount,\n      DcOKRId,\n      DcSubdivisionWhoId\n    ) {\n      this.Name = Name;\n      this.NameShort = NameShort;\n      this.Abbreviation = Abbreviation;\n      this.UserAccount = UserAccount;\n      this.DcOKRId = DcOKRId;\n      this.DcSubdivisionWhoId = DcSubdivisionWhoId;\n    };\n\n    $scope.getFilterDisciplines = function (search) {\n      var discList = $scope.allDisciplines.slice();\n      var l = discList.length;\n      if (l === 0) {\n        if (search !== '') {\n          $scope.newDiscipline = {};\n          $scope.newDiscipline.Name = search;\n          return;\n        } else {\n          $scope.errorFilterDisciplines = 'Дисципліни відсутні';\n          return;\n        }\n      }\n\n      for (var i = 0; i < l; i++) {\n        if (search && discList[i].name.toLowerCase().indexOf(search) === -1) {\n          $scope.errorFilterDisciplines = 'Такої дисципліни не існує';\n          $scope.newDiscipline = {};\n          $scope.newDiscipline.Name = search;\n        } else {\n          $scope.errorFilterDisciplines = '';\n          break;\n        }\n      }\n    };\n\n    $scope.saveDisciplineModal = function () {\n\n      var url = 'StudyOrganization/Discipline/Implement/';\n      var method = 'POST';\n      var Name;\n      var NameShort = $scope.newDiscipline ? $scope.newDiscipline.NameShort : '';\n      var Abbreviation = $scope.newDiscipline ? $scope.newDiscipline.Abbreviation : '';\n      var UserAccount = '';\n      var DcOKRId = 1;\n      var DcSubdivisionWhoId;\n\n      if ((!$scope.newDiscipline) || ($scope.newDiscipline === undefined)) {\n        $scope.errorNameModal = 'Заповніть це поле';\n      } else {\n        Name = $scope.newDiscipline.Name;\n        $scope.errorNameModal = '';\n      }\n\n      if ((!$scope.allSubdivisions.selected) || ($scope.allSubdivisions.selected === undefined)) {\n        $scope.errorSubdivModal = 'Заповніть це поле';\n      } else {\n        DcSubdivisionWhoId = $scope.allSubdivisions.selected.id\n        $scope.errorSubdivModal = '';\n      }\n\n      var sendDisc = new DisciplineNewModel(Name, NameShort,\n        Abbreviation, UserAccount, DcOKRId, DcSubdivisionWhoId);\n\n      api.execute(method, url, sendDisc)\n        .then(function (response) {\n          $scope.errorLabelTextModal = 'Дисципліну створено успішно';\n          loadFilterAdd();\n        }, function (response) {\n          $scope.errorLabelTextModal = api.errorHandler(response);\n        });\n    }\n\n    $scope.getCurrentData = function (objDisc) {\n      $scope.currentData = objDisc;\n    };\n\n    $scope.addDescription = function () {\n      var url = ('StudyOrganization/Discipline/' + $scope.currentData.rtDisciplineId);\n      var method = 'PUT';\n      var ProfTrainTotalId = $scope.currentData.profTrainTotalId;\n      var ProfTrainTotalSubdivisionId = $scope.currentData.profTrainTotalSubdivisionId;\n      var DcSpecializationId = $scope.currentData.dcSpecializationId;\n      var Component = $scope.currentData.component;\n      var Discipline8 = $scope.currentData.discipline8;\n      var Shifr = $scope.currentData.shifr;\n      var OutCredit = !$scope.currentData.outCredit;\n      var Description = $scope.currentData.description;\n      var Competence = $scope.currentData.competence;\n      var Knowledge = $scope.currentData.knowledge;\n      var Skill = $scope.currentData.skill;\n\n      var sendDisc = new DisciplineModel(\n        ProfTrainTotalId, ProfTrainTotalSubdivisionId, DcSpecializationId,\n        Component, Discipline8, Shifr, OutCredit, Description,\n        Competence, Knowledge, Skill\n      );\n\n      api.execute(method, url, sendDisc)\n        .then(function (response) {\n          switch ($scope.lastEdit.name) {\n            case 'subdivision':\n              $scope.reloadDisciplines('not set', $scope.lastEdit.id, 'not set');\n              break;\n            case 'speciality':\n              $scope.reloadDisciplines('not set', 'not set', $scope.lastEdit.id);\n              break;\n            case 'specialization':\n              $scope.reloadDisciplines($scope.lastEdit.id, 'not set', 'not set');\n              break;\n            default:\n          }\n          $scope.errorLabelTextModal = 'Дані було успішно збережено';\n        }, function (response) {\n          $scope.errorLabelTextModal = api.errorHandler(response);\n        });\n    };\n\n    function filterSubdivisionSelect(arr) {\n      var result = [];\n\n      for (var i = 0, l = arr.length; i < l; i++) {\n        if (arr[i].name.indexOf('Кафедра') !== -1) {\n          result.push(arr[i]);\n        }\n      }\n\n      return result;\n    }\n\n    function loadAllSubdivisions() {\n      var url = 'Subdivision';\n      var method = 'GET';\n      $scope.allSubdivisions = [];\n\n      api.execute(method, url)\n        .then(function (response) {\n          var allSubdiv = response;\n\n          if (!response || response === '' || response.length === 0) {\n            $scope.errorLabelText = 'На жаль, дані відсутні';\n          } else {\n            $scope.allSubdivisions = filterSubdivisionSelect(allSubdiv);\n            $scope.errorSubdivModal = '';\n          }\n\n        }, function (response) {\n          $scope.allSubdivisions = [];\n          $scope.errorSubdivModal = api.errorHandler(response);\n        });\n    };\n\n    $scope.loadAllSubdivisions = loadAllSubdivisions;\n\n    loadAllSubdivisions();\n  }\n\n})();\n"]}